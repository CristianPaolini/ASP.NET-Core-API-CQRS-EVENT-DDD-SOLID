services:
  # Microsoft SQL Server
  # https://hub.docker.com/r/microsoft/mssql-server/
  shop-sql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: shop-sql-server
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
      - MSSQL_PID=Express
      - MSSQL_COLLATION=SQL_Latin1_General_CP1_CI_AS
    ports:
      - "${MSSQL_PORT}:${MSSQL_PORT}"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - shop-network

  # MongoDB
  # https://hub.docker.com/_/mongo/
  shop-mongo-server:
    image: mongo:latest
    container_name: shop-mongo-server
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    networks:
      - shop-network

  # Redis Cache
  # https://hub.docker.com/_/redis/
  shop-redis-server:
    image: redis:latest
    container_name: shop-redis-server
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - shop-network
    volumes:
      - redis_data:/data

  # Shop API Container (NET Core)
  shop-api:
    image: shop-api:latest
    container_name: shop-api
    build:
      context: .
      dockerfile: src/Shop.PublicApi/Dockerfile
    env_file:
      - ./.env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=shop-sql-server,${MSSQL_PORT};Database=ShopContext;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True;
      - ConnectionStrings__NoSqlConnection=mongodb://shop-mongo-server:${MONGO_PORT}
      - ConnectionStrings__CacheConnection=shop-redis-server:${REDIS_PORT},password=${REDIS_PASSWORD},abortConnect=false
    ports:
      - "5000:80"
    depends_on:
      - shop-sql-server
      - shop-mongo-server
      - shop-redis-server
    networks:
      - shop-network

# Define volumes for persistent storage
volumes:
  sql_data:
  redis_data:

networks:
  shop-network:
    driver: bridge
